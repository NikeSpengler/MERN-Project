{"ast":null,"code":"var _jsxFileName = \"/Users/nikespengler/Desktop/CODE/MERN-Project/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from \"react\";\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/nikespengler/Desktop/CODE/MERN-Project/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFX;AAGHC,QAAAA,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;AAHd,OAAP;;AAKJ;AACI,aAAON,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMO,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBb,UAAU,CAACE,YAAD,EAAe;AAACI,IAAAA,KAAK,EAAE,EAAR;AAAYE,IAAAA,OAAO,EAAE;AAArB,GAAf,CAAzC;;AAEA,QAAMM,aAAa,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,QADD;AAELE,MAAAA,GAAG,EAAEQ,KAAK,CAACC,MAAN,CAAaV,KAFb;AAGLG,MAAAA,UAAU,EAAEE,KAAK,CAACF;AAHb,KAAD,CAAR;AAKH,GAND;;AAQA,QAAMQ,OAAO,GACTN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACI;AACI,IAAA,EAAE,EAAEN,KAAK,CAACO,EADd;AAEI,IAAA,IAAI,EAAEP,KAAK,CAACN,IAFhB;AAGI,IAAA,WAAW,EAAEM,KAAK,CAACQ,WAHvB;AAII,IAAA,QAAQ,EAAEL,aAJd;AAKI,IAAA,KAAK,EAAEF,UAAU,CAACN,KALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,gBASI;AAAU,IAAA,EAAE,EAAEK,KAAK,CAACO,EAApB;AAAwB,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAA5C;AAA+C,IAAA,QAAQ,EAAEN,aAAzD;AAAwE,IAAA,KAAK,EAAEF,UAAU,CAACN,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR;AAcA,sBACI;AACI,IAAA,SAAS,EAAG,gBAAe,CAACM,UAAU,CAACJ,OAAZ,IAC3B,uBAAwB,GAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAO,IAAA,OAAO,EAAEG,KAAK,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACU,KAAjC,CAJJ,EAKKJ,OALL,EAMK,CAACL,UAAU,CAACJ,OAAZ,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAK,CAACW,SAAV,CAN5B,CADJ;AAUH,CAnCD;;AAqCA,eAAeZ,KAAf","sourcesContent":["import React, { useReducer }from \"react\";\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE': \n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {value: '', isValid: false});\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE',  \n            val: event.target.value, \n            validators: props.validators\n        });\n    };\n\n    const element = \n        props.element === 'input' ? (\n            <input \n                id={props.id} \n                type={props.type} \n                placeholder={props.placeholder} \n                onChange={changeHandler}\n                value={inputState.value}\n            />\n        ) : (\n            <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} value={inputState.value}/>\n        );\n\n    \n    return (\n        <div \n            className={`form-control ${!inputState.isValid && \n            'form-control--invalid'} `}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && <p>{props.errorText}</p>}\n        </div>\n    );   \n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}