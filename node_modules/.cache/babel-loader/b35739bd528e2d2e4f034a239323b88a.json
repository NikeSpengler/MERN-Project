{"ast":null,"code":"var _jsxFileName = \"/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action, type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        input: { ...state.inputs\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: titleInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: descriptionInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","NewPlace","title","value","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,8BAAvD;AACA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,EAAEC,IAAhB;AACI,SAAK,cAAL;AACI,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAChC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC5BD,UAAAA,WAAW,GAAGA,WAAW,IAAKF,MAAM,CAACK,OAArC;AACH,SAFD,MAEO;AACHH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACH;AACJ;;AACD,aAAO,EACH,GAAGN,KADA;AAEHO,QAAAA,KAAK,EAAE,EACH,GAAGP,KAAK,CAACK;AADN;AAFJ,OAAP;;AAOJ;AACI,aAAOL,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,MAAMQ,QAAQ,GAAG,MAAM;AACnBb,EAAAA,UAAU,CAACI,WAAD,EAAc;AACpBM,IAAAA,MAAM,EAAE;AACJI,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,EADJ;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OADH;AAKJK,MAAAA,WAAW,EAAE;AACTD,QAAAA,KAAK,EAAE,EADE;AAETJ,QAAAA,OAAO,EAAE;AAFA;AALT,KADY;AAWpBA,IAAAA,OAAO,EAAE;AAXW,GAAd,CAAV;AAcA,QAAMM,iBAAiB,GAAGlB,WAAW,CAAC,CAACmB,EAAD,EAAKH,KAAL,EAAYJ,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAArC;AAEA,QAAMQ,uBAAuB,GAAGpB,WAAW,CAAC,CAACmB,EAAD,EAAKH,KAAL,EAAYJ,OAAZ,KAAwB,CAAE,CAA3B,EAA6B,EAA7B,CAA3C;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACA,IAAA,EAAE,EAAC,OADH;AAEI,IAAA,OAAO,EAAC,OAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,UAAU,EAAG,CAACR,iBAAiB,EAAlB,CALjB;AAMI,IAAA,SAAS,EAAC,6BANd;AAOI,IAAA,OAAO,EAAEc,iBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,KAAD;AACA,IAAA,EAAE,EAAC,aADH;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,aAHV;AAII,IAAA,UAAU,EAAG,CAACd,iBAAiB,EAAlB,EAAsBD,mBAAmB,CAAC,CAAD,CAAzC,CAJjB;AAKI,IAAA,SAAS,EAAC,2DALd;AAMI,IAAA,OAAO,EAAEiB,uBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH,CAxCD;;AA0CA,eAAeN,QAAf","sourcesContent":["import React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n    switch (action, type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid &&  action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state, \n                input: {\n                    ...state.inputs, \n                }\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst NewPlace = () => {\n    useReducer(formReducer, {\n        inputs: {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            }\n        },\n        isValid: false\n    });\n\n    const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n\n    const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n\n    return (\n        <form className=\"place-form\">\n            <Input \n            id=\"title\"\n                element=\"input\" \n                type=\"text\" \n                label=\"Title\" \n                validators= {[VALIDATOR_REQUIRE()]} \n                errorText=\"Please enter a valid title.\"\n                onInput={titleInputHandler}\n            />\n            <Input \n            id=\"description\"\n                element=\"textarea\" \n                label=\"Description\" \n                validators= {[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]} \n                errorText=\"Please enter a valid description (at least 5 characters).\"\n                onInput={descriptionInputHandler}\n            />\n        </form>\n    );\n};\n\nexport default NewPlace;"]},"metadata":{},"sourceType":"module"}