{"ast":null,"code":"var _jsxFileName = \"/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/UpdatePlace.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport './PlaceForm.css';\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Kolbäcksgränd 3',\n  description: 'One of the most beautiful houses',\n  imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n  address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n  location: {\n    lat: 59.277486,\n    lng: 18.139336\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Kolbäcksgränd 3',\n  description: 'One of the most beautiful houses',\n  imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n  address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n  location: {\n    lat: 59.277486,\n    lng: 18.139336\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  const [formSate, inputHandler] = useForm({\n    title: {\n      value: identifiedPlace.title,\n      isValid: true\n    },\n    description: {\n      value: identifiedPlace.description,\n      isValid: true\n    }\n  }, true);\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Could not find place!\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    value: formState.inputs.title.value,\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min 5 characters).\",\n    onInput: inputHandler,\n    value: formState.inputs.description.value,\n    valid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/UpdatePlace.js"],"names":["React","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","identifiedPlace","find","p","formSate","inputHandler","value","isValid","formState","inputs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,8BAAvD;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,iBAAP;AAGA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAC,IADP;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,WAAW,EAAE,kCAHjB;AAIIC,EAAAA,QAAQ,EAAE,0EAJd;AAKIC,EAAAA,OAAO,EAAE,4CALb;AAMIC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GANd;AAUIC,EAAAA,OAAO,EAAE;AAVb,CADiB,EAajB;AACIR,EAAAA,EAAE,EAAC,IADP;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,WAAW,EAAE,kCAHjB;AAIIC,EAAAA,QAAQ,EAAE,0EAJd;AAKIC,EAAAA,OAAO,EAAE,4CALb;AAMIC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GANd;AAUIC,EAAAA,OAAO,EAAE;AAVb,CAbiB,CAArB;;AA4BA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGjB,SAAS,GAAGiB,OAA5B;AAEA,QAAMC,eAAe,GAAGZ,YAAY,CAACa,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACb,EAAF,KAASU,OAAhC,CAAxB;AAEC,QAAM,CAACI,QAAD,EAAWC,YAAX,IAA2BjB,OAAO,CAAC;AACtCG,IAAAA,KAAK,EAAE;AACHe,MAAAA,KAAK,EAAEL,eAAe,CAACV,KADpB;AAEHgB,MAAAA,OAAO,EAAE;AAFN,KAD+B;AAKtCf,IAAAA,WAAW,EAAE;AACTc,MAAAA,KAAK,EAAEL,eAAe,CAACT,WADd;AAETe,MAAAA,OAAO,EAAE;AAFA;AALyB,GAAD,EAUtC,IAVsC,CAAxC;;AAYD,MAAI,CAACN,eAAL,EAAsB;AAClB,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AAKH;;AAID,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,OAAO,EAAC,OAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,UAAU,EAAE,CAACf,iBAAiB,EAAlB,CALhB;AAMI,IAAA,SAAS,EAAC,6BANd;AAOI,IAAA,OAAO,EAAEmB,YAPb;AAQI,IAAA,KAAK,EAAEG,SAAS,CAACC,MAAV,CAAiBlB,KAAjB,CAAuBe,KARlC;AASI,IAAA,KAAK,EAAE,IATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAYM,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,UAAU,EAAE,CAACnB,mBAAmB,CAAC,CAAD,CAApB,CAJd;AAKE,IAAA,SAAS,EAAC,sDALZ;AAME,IAAA,OAAO,EAAEkB,YANX;AAOE,IAAA,KAAK,EAAEG,SAAS,CAACC,MAAV,CAAiBjB,WAAjB,CAA6Bc,KAPtC;AAQE,IAAA,KAAK,EAAE,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZN,eAsBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ,CADJ;AA4BH,CAvDD;;AAyDA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport './PlaceForm.css';\n\n\nconst DUMMY_PLACES = [\n    {\n        id:'p1',\n        title: 'Kolbäcksgränd 3',\n        description: 'One of the most beautiful houses',\n        imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n        address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n        location: {\n            lat: 59.277486,\n            lng: 18.139336\n        },\n        creator: 'u1'\n    },\n    {\n        id:'p2',\n        title: 'Kolbäcksgränd 3',\n        description: 'One of the most beautiful houses',\n        imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n        address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n        location: {\n            lat: 59.277486,\n            lng: 18.139336\n        },\n        creator: 'u2'\n    }\n];\n\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId); \n\n     const [formSate, inputHandler] = useForm({\n        title: {\n            value: identifiedPlace.title,\n            isValid: true\n        },\n        description: {\n            value: identifiedPlace.description,\n            isValid: true\n\n        }\n    }, true)\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <h2>Could not find place!</h2>\n            </div>\n        );\n    }\n\n   \n\n    return (\n        <form className=\"place-form\">\n            <Input \n                id=\"title\" \n                element=\"input\" \n                type=\"text\" \n                label=\"Title\" \n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title.\"\n                onInput={inputHandler}\n                value={formState.inputs.title.value}\n                valid={true}\n            />\n              <Input \n                id=\"description\" \n                element=\"textarea\" \n                label=\"Description\" \n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Please enter a valid description (min 5 characters).\"\n                onInput={inputHandler}\n                value={formState.inputs.description.value}\n                valid={true}\n            />\n            <Button type=\"submit\" disabled={true}>\n                UPDATE PLACE\n            </Button>\n        </form>\n    );\n};\n\nexport default UpdatePlace;"]},"metadata":{},"sourceType":"module"}