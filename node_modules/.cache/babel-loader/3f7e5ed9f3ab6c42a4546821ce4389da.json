{"ast":null,"code":"var _jsxFileName = \"/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        input: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"ADD PLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","formState","dispatch","title","description","inputHandler","id","placeSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid &&  action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state, \n                input: {\n                    ...state.inputs, \n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst NewPlace = () => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            }\n        },\n        isValid: false\n    });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE', \n            value: value, \n            isValid: isValid, \n            inputId: id\n        });\n    }, []);\n\n    const placeSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n    };\n\n    return (\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n            <Input \n            id=\"title\"\n                element=\"input\" \n                type=\"text\" \n                label=\"Title\" \n                validators= {[VALIDATOR_REQUIRE()]} \n                errorText=\"Please enter a valid title.\"\n                onInput={inputHandler}\n            />\n            <Input \n            id=\"description\"\n                element=\"textarea\" \n                label=\"Description\" \n                validators= {[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]} \n                errorText=\"Please enter a valid description (at least 5 characters).\"\n                onInput={inputHandler}\n            />\n            <Button type=\"submit\" disabled={!formState.isValid}>\n                ADD PLACE\n            </Button>\n        </form>\n    );\n};\n\nexport default NewPlace;"]},"metadata":{},"sourceType":"module"}