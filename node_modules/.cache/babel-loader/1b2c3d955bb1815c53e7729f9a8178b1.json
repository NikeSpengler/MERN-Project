{"ast":null,"code":"var _jsxFileName = \"/Users/nikespengler/Desktop/CODE/MERN-Project/src/user/pages/Auth.js\";\nimport React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({}, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Login Required!\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email adress.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid email password, at least 5 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/nikespengler/Desktop/CODE/MERN-Project/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","name","undefined","inputs","prevMode","authSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\n\nconst Auth = () => {\n    const [ isLoginMode, setIsLoginMode ] = useState(true);\n    const [ formState, inputHandler, setFormData ] = useForm({\n        email: {\n            value: '',\n            isValid: false\n\n        },\n        password: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFormData (\n                {\n                    name: undefined\n                }, \n                formState.inputs.email.isValid && formState.inputs.password.isValid\n            );\n        } else {\n            setFormData({}, false);\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n    };\n\n    return <Card className=\"authentication\">\n        <h2>Login Required!</h2>\n        <hr/>\n        <form onSubmit={authSubmitHandler}>\n            {!isLoginMode && (\n            <Input \n                element=\"input\" \n                id=\"name\" \n                type=\"text\" \n                label=\"Your Name\" \n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a name\"\n                onInput={inputHandler}\n            />\n            )}\n            <Input \n                element=\"input\" \n                id=\"email\" \n                type=\"email\" \n                label=\"E-mail\" \n                validators={[VALIDATOR_EMAIL()]}\n                errorText=\"Please enter a valid email adress.\"\n                onInput={inputHandler}\n\n            />\n            <Input \n                element=\"input\" \n                id=\"password\" \n                type=\"password\" \n                label=\"Password\" \n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Please enter a valid email password, at least 5 characters.\"\n                onInput={inputHandler}\n\n            />\n            <Button type=\"submit\" disabled={!formState.isValid}>\n                {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n            </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}</Button>\n    </Card>;\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}