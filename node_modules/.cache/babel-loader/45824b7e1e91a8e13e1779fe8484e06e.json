{"ast":null,"code":"var _jsxFileName = \"/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport './PlaceForm.css';\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Kolbäcksgränd 3',\n  description: 'One of the most beautiful houses',\n  imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n  address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n  location: {\n    lat: 59.277486,\n    lng: 18.139336\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Kolbäcksgränd 6',\n  description: 'Beautiful house',\n  imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n  address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n  location: {\n    lat: 59.277486,\n    lng: 18.139336\n  },\n  creator: 'u2'\n}];\n\nconst UpdatePlace = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    if (identifiedPlace) {\n      setFormData({\n        title: {\n          value: identifiedPlace.title,\n          isValid: true\n        },\n        description: {\n          value: identifiedPlace.description,\n          isValid: true\n        }\n      }, true);\n    }\n\n    setIsLoading(false);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Could not find place!\"));\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Loading...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min 5 characters).\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/Users/nikespengler/Desktop/CODE/MERN-Project/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useState","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","isLoading","setIsLoading","placeId","formState","inputHandler","setFormData","value","isValid","identifiedPlace","find","p","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport './PlaceForm.css';\n\n\nconst DUMMY_PLACES = [\n    {\n        id:'p1',\n        title: 'Kolbäcksgränd 3',\n        description: 'One of the most beautiful houses',\n        imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n        address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n        location: {\n            lat: 59.277486,\n            lng: 18.139336\n        },\n        creator: 'u1'\n    },\n    {\n        id:'p2',\n        title: 'Kolbäcksgränd 6',\n        description: 'Beautiful house',\n        imageUrl: 'https://www.brffriheten.se/wp-content/uploads/Kolbacksgrand-flygbild.jpg',\n        address: 'Kolbäcksgränd, 128 46 Bagarmossen, Sverige',\n        location: {\n            lat: 59.277486,\n            lng: 18.139336\n        },\n        creator: 'u2'\n    }\n];\n\n\nconst UpdatePlace = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const placeId = useParams().placeId; \n\n    const [formState, inputHandler, setFormData] = useForm(\n        {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n    \n    useEffect (() => {\n        if (identifiedPlace) {\n            setFormData(\n            {\n                title: {\n                    value: identifiedPlace.title,\n                    isValid: true\n                },\n                description: {\n                    value: identifiedPlace.description,\n                    isValid: true\n                }\n            }, \n            true\n            );\n        }\n        setIsLoading(false);\n    }, [setFormData, identifiedPlace]);\n   \n\n\n    const placeUpdateSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n    };\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <h2>Could not find place!</h2>\n            </div>\n        );\n    }\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                <h2>Loading...</h2>\n            </div>\n        );\n    }\n\n    return (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n            <Input \n                id=\"title\" \n                element=\"input\" \n                type=\"text\" \n                label=\"Title\" \n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title.\"\n                onInput={inputHandler}\n                initialValue={formState.inputs.title.value}\n                initialValid={formState.inputs.title.isValid}\n            />\n              <Input \n                id=\"description\" \n                element=\"textarea\" \n                label=\"Description\" \n                validators={[VALIDATOR_MINLENGTH(5)]}\n                errorText=\"Please enter a valid description (min 5 characters).\"\n                onInput={inputHandler}\n                initialValue={formState.inputs.description.value}\n                initialValid={formState.inputs.description.isValid}\n            />\n            <Button type=\"submit\" disabled={!formState.isValid}>\n                UPDATE PLACE\n            </Button>\n        </form>\n    );\n};\n\nexport default UpdatePlace;"]},"metadata":{},"sourceType":"module"}